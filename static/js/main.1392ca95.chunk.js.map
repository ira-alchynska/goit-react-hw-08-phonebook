{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/Contacts/contacts-actions.js","redux/Contacts/contacts-redusers.js","redux/auth/auth-redusers.js","redux/store.js","components/Container/Container.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/dolphin_PNG71318.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PablicRoute.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filteredContact","itemsReducer","createReducer","_","payload","state","filter","id","filterReducer","loading","error","action","combineReducers","items","initialUserState","name","email","user","setError","isAuthenticated","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","useStyles","createUseStyles","container","margin","right","left","padding","width","Container","children","classes","className","getIsAuthenticated","getUserName","link","display","textDecoration","fontWeight","color","activeLink","connect","to","exact","activeClassName","AuthNav","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","defaultAvatar","src","alt","type","onClick","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegistrationView","LoginView","PhonebookView","App","this","onGetCurrentUser","fallback","PablicRoute","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1392ca95.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from '../auth/auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\n//poiu\r\n//poiu@gmail.com\r\n//poiupoiu123\r\n\r\nconst login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { register, login, logout, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsError = createAction('contacts/fetchContactsRequest');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst filteredContact = createAction('contacts/filtered');\r\n\r\nexport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filteredContact,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filteredContact,\r\n} from './contacts-actions';\r\n\r\nconst INITIAL_CONTACTS = [];\r\n\r\nconst itemsReducer = createReducer(INITIAL_CONTACTS, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filteredContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [deleteContactRequest]: () => true,\r\n  [fetchContactsRequest]: () => true,\r\n\r\n  [addContactSuccess]: () => false,\r\n  [deleteContactSuccess]: () => false,\r\n  [fetchContactsSuccess]: () => false,\r\n\r\n  [addContactError]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsRequest]: () => null,\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n  [addContactRequest]: () => null,\r\n  [addContactError]: (_, action) => action.payload,\r\n  [deleteContactRequest]: () => null,\r\n  [deleteContactError]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from '../auth/auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './Contacts/contacts-redusers';\r\nimport authReducer from './auth/auth-redusers';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    margin: {\r\n      right: 'auto',\r\n      left: 'auto',\r\n    },\r\n    padding: '20px',\r\n    width: '1200px',\r\n  },\r\n});\r\n\r\nconst Container = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport { getIsAuthenticated, getUserName };\r\n","import { NavLink } from 'react-router-dom';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst useStyles = createUseStyles({\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: 'skyblue',\r\n  },\r\n});\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className={classes.link}\r\n        activeClassName={classes.activeLink}\r\n      >\r\n        Homepage\r\n      </NavLink>\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to=\"/phonebook\"\r\n          className={classes.link}\r\n          activeClassName={classes.activeLink}\r\n        >\r\n          PhoneBook\r\n        </NavLink>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: 'skyblue',\r\n  },\r\n});\r\n\r\nconst AuthNav = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={classes.link}\r\n        activeClassName={classes.activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        className={classes.link}\r\n        activeClassName={classes.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","export default __webpack_public_path__ + \"static/media/dolphin_PNG71318.be05ca44.png\";","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { connect } from 'react-redux';\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\nimport { logout } from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from './dolphin_PNG71318.png';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n});\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <img src={avatar} alt=\"user\" width=\"32\" className={classes.avatar} />\r\n      <span className={classes.name}>Welcome, {name}!</span>\r\n      <button type=\"button\" onClick={onLogout}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  name: getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n});\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <header className={classes.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router';\r\nimport Container from './components/Container';\r\nimport AppBar from './components/AppBar';\r\nimport { getCurrentUser } from '../src/redux/auth/auth-operations';\r\nimport { connect } from 'react-redux';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PablicRoute from './components/PablicRoute';\r\n\r\nconst HomeView = lazy(() => import('./Views/HomeView'));\r\nconst RegistrationView = lazy(() => import('./Views/RegistrationView'));\r\nconst LoginView = lazy(() => import('./Views/LoginView'));\r\nconst PhonebookView = lazy(() => import('./Views/PhonebookView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <Switch>\r\n            <PablicRoute exact path=\"/\" component={HomeView} />\r\n            <PrivateRoute\r\n              path=\"/phonebook\"\r\n              redirectTo=\"/login\"\r\n              component={PhonebookView}\r\n            />\r\n            <PablicRoute\r\n              path=\"/login\"\r\n              redirectTo=\"/phonebook\"\r\n              restricted\r\n              component={LoginView}\r\n            />\r\n\r\n            <PablicRoute\r\n              path=\"/register\"\r\n              redirectTo=\"/phonebook\"\r\n              restricted\r\n              component={RegistrationView}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}