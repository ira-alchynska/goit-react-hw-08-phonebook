{"version":3,"sources":["Views/RegistrationView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","input","padding","outline","title","position","height","margin","border","clip","overflow","RegistrationView","state","name","email","password","handleSubmit","e","preventDefault","props","onRegister","setState","handleChange","target","value","this","style","onSubmit","className","type","onChange","placeholder","autoComplete","Component","mapDispatchToProps","register","connect"],"mappings":"4PAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,IAEhBC,MAAO,CACLC,QAAS,MACTC,QAAS,QAGXC,MAAO,CACLC,SAAU,WACVT,MAAO,MACPU,OAAQ,MACRC,OAAQ,OACRC,OAAQ,IACRN,QAAS,IACTO,KAAM,gBACNC,SAAU,WAIRC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,WAAW,EAAKR,OAC3B,EAAKS,SAAS,CACZR,KAAM,GACNC,MAAO,GACPC,SAAU,M,EAIdO,aAAe,YAAkC,IAAD,IAA9BC,OAAUV,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,MAChC,EAAKH,SAAL,eACGR,EAAOW,K,4CAGZ,WACE,MAAkCC,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SACrB,OACE,qCACE,oBAAIW,MAAOhC,EAAOU,MAAlB,2BACA,uBAAMsB,MAAOhC,EAAOC,KAAMgC,SAAUF,KAAKT,aAAzC,UACE,oBAAIY,UAAU,aAAd,+BACA,wBAAOF,MAAOhC,EAAOG,MAArB,iBAEE,uBACE6B,MAAOhC,EAAOO,MACd4B,KAAK,OACLhB,KAAK,OACLW,MAAOX,EACPiB,SAAUL,KAAKH,aACfM,UAAU,eACVG,YAAY,uBAGhB,wBAAOL,MAAOhC,EAAOG,MAArB,kBAEE,uBACE6B,MAAOhC,EAAOO,MACd4B,KAAK,QACLhB,KAAK,QACLW,MAAOV,EACPgB,SAAUL,KAAKH,aACfM,UAAU,QACVG,YAAY,iBACZC,aAAa,WAGjB,wBAAON,MAAOhC,EAAOG,MAArB,qBAEE,uBACE6B,MAAOhC,EAAOO,MACd2B,UAAU,QACVC,KAAK,WACLhB,KAAK,WACLW,MAAOT,EACPgB,YAAY,WACZD,SAAUL,KAAKH,kBAGnB,wBAAQO,KAAK,SAASD,UAAU,SAAhC,oC,GAlEqBK,aA2EzBC,EAAqB,CACzBd,WAAYe,KAGCC,sBAAQ,KAAMF,EAAdE,CAAkCzB","file":"static/js/5.ecc9de0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../redux/auth/auth-operations';\r\nimport '../button.css';\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n  input: {\r\n    padding: '5px',\r\n    outline: 'none',\r\n  },\r\n\r\n  title: {\r\n    position: 'absolute',\r\n    width: '1px',\r\n    height: '1px',\r\n    margin: '-1px',\r\n    border: '0',\r\n    padding: '0',\r\n    clip: 'rect(0 0 0 0)',\r\n    overflow: 'hidden',\r\n  },\r\n};\r\n\r\nclass RegistrationView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onRegister(this.state);\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n    return (\r\n      <>\r\n        <h1 style={styles.title}>Register Page</h1>\r\n        <form style={styles.form} onSubmit={this.handleSubmit}>\r\n          <h2 className=\"title-form\">Registration form</h2>\r\n          <label style={styles.label}>\r\n            Name\r\n            <input\r\n              style={styles.input}\r\n              type=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              className=\"form-control\"\r\n              placeholder=\"enter your name\"\r\n            />\r\n          </label>\r\n          <label style={styles.label}>\r\n            Email\r\n            <input\r\n              style={styles.input}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n              className=\"input\"\r\n              placeholder=\"your@email.com\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label style={styles.label}>\r\n            Password\r\n            <input\r\n              style={styles.input}\r\n              className=\"input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              placeholder=\"password\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"button\">\r\n            Registration\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrationView);\r\n"],"sourceRoot":""}